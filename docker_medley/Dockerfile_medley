#*******************************************************************************
# 
#   Dockerfile_medley:  dockerfile used to build the image that runs Medley,
#        Xvnc, websockify, etc. within the online.interlisp.org web portal.
#        One container using this image is run for each user that is logged
#        into the portal.  This container is started up by the web-portal
#        express app.
#          
# 
#   2022-02-02 Frank Halasz
# 
# 
#   Copyright: 2022 by Interlisp.org 
# 
#
# *****************************************************************************/
ARG FROM_TAG=latest
ARG DOCKER_NAMESPACE=interlisp

FROM ${DOCKER_NAMESPACE}/medley:${FROM_TAG}

SHELL ["/bin/bash", "-c"]
USER root:root

ARG FROM_TAG
ARG BUILD_DATE=unknown
ARG RELEASE_TAG=unknown
ARG MAIKO_RELEASE=unknown
ARG MEDLEY_RELEASE=unknown
ARG NOTECARDS_RELEASE=unknown
ARG REPO_OWNER=Interlisp
ARG PLATFORM=amd64

LABEL name="online.interlisp.org"
LABEL description="The Medley Interlisp environment used by online.interlisp.org"
LABEL url="https://github.com/${REPO_OWNER}/online"
LABEL build-time=$BUILD_DATE
LABEL release_tag=$RELEASE_TAG
LABEL maiko_release=$MAIKO_RELEASE
LABEL medley_release=$MEDLEY_RELEASE
LABEL notecards_release=$NOTECARDS_RELEASE

ENV ONLINE_MEDLEY_BUILD_DATE=$BUILD_DATE
ENV ONLINE_MEDLEY_RELEASE=$RELEASE_TAG
ENV NOTECARDS_RELEASE=$NOTECARDS_RELEASE

ARG DEBIAN_FRONTEND=noninteractive
ARG USER_NAME=medley
ARG HOMEDIR=/home/${USER_NAME}
ARG MEDLEY_INSTALLDIR=/usr/local/interlisp/medley
ENV MEDLEY_INSTALLDIR=${MEDLEY_INSTALLDIR}
ENV MEDLEY_USERDIR=${HOMEDIR}/il
ARG MAIKO_INSTALLDIR=/usr/local/interlisp/maiko
ENV MAIKO_INSTALLDIR=${MAIKO_INSTALLDIR}

ARG NC_INSTALLDIR=/usr/local/interlisp/notecards
ENV NC_INSTALLDIR=${NC_INSTALLDIR}

# install apt-utils, curl, git 
RUN apt-get update \
    && apt-get install -y apt-utils \
    && apt-get install -y curl \
    && apt-get install -y git

# install tigervnc server
RUN apt-get purge -y tightvncserver \
    && apt-get install -y tigervnc-standalone-server

# install gh (github cli)
COPY gh/gh_2.14.7_linux_*.deb /tmp
RUN dpkg -i /tmp/gh_2.14.7_linux_${PLATFORM}.deb; rm /tmp/gh_2.14.7_linux_*.deb

#  install websockify for use with noVNC
RUN apt-get install -y websockify

#  install xterm plus twm for minimal window manager function on xterm/sftp "page"
RUN apt-get install -y xterm twm autocutsel

# install sshd
RUN apt-get -y install openssh-server && \
    mkdir -p /var/run/sshd && \
    rm -f /etc/ssh/ssh_host_*key*
COPY sftp/sshd_config /etc/ssh/sshd_config
COPY sftp/ssh_host_*_key /etc/ssh/
COPY sftp/ssh_host_*_key.pub /etc/ssh/
RUN  chmod 600 /etc/ssh/ssh_host_*_key

#     Install FileBrowser

COPY filebrowser/filebrowser /usr/local/bin/filebrowser
RUN mkdir -p /usr/local/filebrowser \
    && /usr/local/bin/filebrowser config init -d /usr/local/filebrowser/filebrowser.db \
       --address "0.0.0.0" \
       --perm.execute=false \
       --perm.share=false \
       --root "/home/medley"

#  install nano & vim for ease of maintenance
RUN apt-get install -y nano vim

# create a sysout subdir
RUN mkdir -p ${MEDLEY_USERDIR}/sysout \
    && chown ${USER_NAME}:${USER_NAME} ${MEDLEY_USERDIR}/sysout

# keep lisp.virtualmem out of medley home dir
RUN mkdir -p ${MEDLEY_USERDIR} \
    && chown ${USER_NAME}:${USER_NAME} ${MEDLEY_USERDIR} \
    && mkdir ${MEDLEY_USERDIR}/vmem \
    && chown ${USER_NAME}:${USER_NAME} ${MEDLEY_USERDIR}/vmem

# copy the run-XXX and other scripts into ${MEDLEY_INSTALLDIR}/../online/bin
ARG ONLINE_BINDIR=${MEDLEY_INSTALLDIR}/../online/bin
RUN mkdir -p ${ONLINE_BINDIR} \
    && chown root:root ${ONLINE_BINDIR}
COPY scripts/* ${ONLINE_BINDIR}
RUN chmod ugo+x ${ONLINE_BINDIR}/* \
    && ln -s ${ONLINE_BINDIR}/request_new_tab.sh ${ONLINE_BINDIR}/request_new_tab


# copy INIT file into home directory
COPY --chown=${USER_NAME}:${USER_NAME} init/INIT ${MEDLEY_USERDIR}
COPY --chown=${USER_NAME}:${USER_NAME} init/ONLINE-INIT ${MEDLEY_INSTALLDIR}/greetfiles
COPY --chown=${USER_NAME}:${USER_NAME} init/ONLINE-INIT.LCOM ${MEDLEY_INSTALLDIR}/greetfiles

# copy Notecards into place
COPY notecards ${NC_INSTALLDIR}
RUN echo ${NOTECARDS_RELEASE} ${NC_INSTALLDIR}/release.txt

# do a loadup to create the online.sysout with Notecards, Rooms, etc installed
ARG ONLINE_DIR=${MEDLEY_INSTALLDIR}/../online
RUN mkdir -p ${ONLINE_DIR}/docker_medley/loadup \
    && chown root:root ${ONLINE_DIR} \
    && chown root:root ${ONLINE_DIR}/docker_medley \
    && chown root:root ${ONLINE_DIR}/docker_medley/loadup
COPY --chown=${USER_NAME}:${USER_NAME} loadup/* ${ONLINE_DIR}/docker_medley/loadup
RUN ls -la ${ONLINE_DIR}/docker_medley/loadup
RUN Xvnc -geometry 1280x720 :0 \
    &  export DISPLAY=":0" \
    && PATH="$MAIKO_INSTALLDIR:$PATH" \
    && ${ONLINE_DIR}/docker_medley/loadup/loadup-online-from-full.sh \
    && cp -p ${MEDLEY_INSTALLDIR}/tmp/online.sysout ${MEDLEY_INSTALLDIR}/loadups/full.sysout \
    && rm -rf ${ONLINE_DIR}/docker_medley/loadup    

# clean up medley/.bashrc for use with xterm
RUN sed -i /PS1=/s/u@.h/u@oio/ ${HOMEDIR}/.bashrc \
    && chown ${USER_NAME}:${USER_NAME} ${HOMEDIR}/.bashrc

# setup medley home dir with misc config files
COPY --chown=${USER_NAME}:${USER_NAME} misc/.Xresources ${HOMEDIR}

# Give user medley a password that can be used with sftp
RUN echo ${USER_NAME}:3333CoyoteHill | chpasswd

# Create the dir to mount the TLS certificates
RUN mkdir -p /etc/letsencrypt/live/online.interlisp.org/ \
    && chmod go-rwx /etc/letsencrypt/live \
    && mkdir -p /etc/letsencrypt/archive/online.interlisp.org/ \
    && chmod go-rwx /etc/letsencrypt/archive

# In actual use, USER and ENTRYPOINT will be set by the docker run command
WORKDIR ${HOMEDIR}
USER root:root
ENTRYPOINT USER=${USER_NAME} /bin/bash

# temp patch 2022-10-12
# COPY HELPSYS fixes into lispusers
COPY --chown=${USER_NAME}:${USER_NAME} misc/HELPSYS ${MEDLEY_INSTALLDIR}/lispusers/HELPSYS
COPY --chown=${USER_NAME}:${USER_NAME} misc/HELPSYS.LCOM ${MEDLEY_INSTALLDIR}/lispusers/HELPSYS.LCOM


